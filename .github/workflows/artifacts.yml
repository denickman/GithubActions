name: Run Unit Tests

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build:
    name: Build and Test default scheme using iPhone
    runs-on: macos-latest

    outputs:
        json-file: ${{ steps.pbls.outputs.json-file }}

    steps:
      - name: Checkout`
        uses: actions/checkout@v4

      - name: Show current directory
        run: pwd

      - name: Publish filename
        id: pbls
        run: find Resources/*.json -type f -execdir echo 'json-file={}' >> $GITHUB_OUTPUT ';'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
            path: |
                Pods
                Podfile.lock
                key: ${{ runner.os }}-pod-${{ hashFiles('**/Podfile.lock') }}


      - name: Install pod dependencies
        run: |
           cd github-actions
           pod install # --verbose

      # - name: Check if .xcodeproj exists
      #   run: |
      #           ls -la
      #            if [ -f "github-actions.xcodeproj" ]; then
      #            echo ".xcodeproj exists"
      #            else
      #             echo ".xcodeproj not found"
      #            exit 1
      #               fi

      # - name: Check if .xcworkspace exists
      #   run: |
      #    ls -la
      #        if [ -f "github-actions/github-actions.xcworkspace" ]; then
      #           echo "Workspace exists"
      #           else
      #            echo "Workspace not found"
      #           exit 1
      #        fi

      # - name: Set up Xcode 14.3.1
      #   uses: maxim-lobanov/setup-xcode@v1
      #   with:
      #     xcode-version: '14.3.1'
      #
      # - name: Run Unit Tests
      #   run: |
      #     #cd github-actions
      #     ls -la
      #     xcodebuild test \
      #       -workspace github-actions.xcworkspace \
      #       -scheme "github-actions" \
      #       -destination 'platform=iOS Simulator,name=iPhone 14' \
      #       CODE_SIGN_IDENTITY="" \
      #       CODE_SIGNING_REQUIRED=NO \
      #       OTHER_SWIFT_FLAGS="-D ED_SKIP_SWIFT_FORMAT" | xcpretty

      - name: Upload specific file as artifact
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: |
            github-actions/Info.plist
            github-actions/Helpers

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
        - name: Deploy
          run: echo "Deploying..."

        - name: Download artifacts
          uses: actions/download-artifact@v4
          with:
            name: Artifacts
          run: ls -la

        - name: Output filename
          run: echo "${{ needs.build.outputs.json-file }}"
